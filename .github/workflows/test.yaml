name: Test

on:
    push:
        branches: [ main ]
        paths:
            - src/**
            - tests/**
            - pyproject.toml
            - .github/workflows/test.yml
            - .github/workflows/constraints.txt
    pull_request:
        branches: [ main ]
        paths:
            - src/**
            - tests/**
            - pyproject.toml
            - .github/workflows/test.yml
            - .github/workflows/constraints.txt
    workflow_dispatch: {}

concurrency:
    cancel-in-progress: true
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  cache: pip
                  python-version: "3.11"
            - name: Install dependencies
              env:
                PIP_CONSTRAINT: .github/workflows/constraints.txt
              run: |
                pipx install hatch
            - name: Run lint
              run: |
                hatch run lint:style-gh

    typing:
      name: Typing
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-python@v4
            with:
                cache: pip
                python-version: "3.11"
          - name: Install dependencies
            env:
              PIP_CONSTRAINT: .github/workflows/constraints.txt
            run: |
              pipx install hatch
          - name: Run typing
            run: |
              hatch run typing:check

    test:
        name: Pytest (Python ${{ matrix.python-version }}, ${{ matrix.os }}, SQLAlchemy ${{ matrix.sqlalchemy-version }})
        runs-on: ${{ matrix.os }}
        continue-on-error: ${{ matrix.python-version == '3.12' }}
        strategy:
            fail-fast: false
            matrix:
                os: ["ubuntu-latest"]
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
                sqlalchemy-version: ["1.*", "2.*"]
                include:
                    - python-version: "3.11"
                      sqlalchemy-version: "2.*"
                      os: "windows-latest"

                    - python-version: "3.11"
                      sqlalchemy-version: "2.*"
                      os: "macos-latest"
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  cache: pip
                  python-version: ${{ matrix.python-version }}
                  allow-prereleases: true
            - name: Install dependencies
              env:
                PIP_CONSTRAINT: .github/workflows/constraints.txt
              run: |
                pipx install hatch
            - name: Run tests
              env:
                SQLALCHEMY_VERSION: ${{ matrix.sqlalchemy-version }}
              run: |
                hatch run test-cov
            - uses: actions/upload-artifact@v3
              with:
                name: coverage-data
                path: ".coverage.*"

    coverage:
        name: Coverage
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - name: Install dependencies
              env:
                PIP_CONSTRAINT: .github/workflows/constraints.txt
              run: |
                pipx install hatch
            - uses: actions/download-artifact@v3
              with:
                name: coverage-data
            - name: Combine coverage data
              run: |
                hatch run cov-report
            - name: Create coverage XML report
              run: |
                hatch run cov-xml
            - uses: codecov/codecov-action@v3
              with:
                fail_ci_if_error: true
                token: ${{ secrets.CODECOV_TOKEN }}
